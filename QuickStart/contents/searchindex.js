(function(){
var additionalData = [
["Pages/Page_123535845.html","3 Preparing the SDEV",
"\t\t\n3 Preparing the SDEV\nThe following three steps are required in order to prepare the SDEV.\n \tTurn the SDEV unit on.\n \tConnect the SDEV to the PC.\n \tConnect the Wii Classic Controller Pro.\n Info\n Before taking any of these steps, check the DIP switches on the lower left of the back of the SDEV (circled in red in the image), and confirm that they all are set in the up position.\nTurning the SDEV Unit On\nConnect the included Wii U console AC adapter to the AC adapter connector on the top of the SDEV (circled in red in the figure).\nThe SDEV does not have a primary POWER switch to turn power on and off, so you must connect and remove the Wii U console AC adapter to do so.\nWhen you press and hold the POWER Button atop the SDEV console for six seconds, the NX system will turn off, but the SDEV's main power will remain on.\nYou can check that the SDEV has been turned on using the following methods.\n \tThe LED on the Ethernet port on top of the SDEV lights up (and then turns off after approximately 10 seconds).\n \tThe three LEDs on the lower left of the back of the SDEV light up. (All three LEDs will light up for a few seconds, and then they will turn off except for the LED in the middle.)\nConnecting the SDEV to the PC\nConnect an Ethernet cable to the Ethernet port on the top of the SDEV (circled in red in the figure).\nUse one of the following methods to connect the PC and the SDEV console via Ethernet.\n \tConnect the PC and the SDEV directly with the Ethernet cable.\tThe setting for the network card directly connected to the SDEV must be to set to Obtain an IP address automatically.\n\tFor information about configuring this setting, see the Direct Connection IP Address Settings section later in this document.\n \tThe SDEV and PC are connected via a network with a DHCP server.\nDirect Connection IP Address Settings\n \tProcedure \tOperation\n \t1 \t From Control Panel, select Networking and Internet > Network and Sharing Center, and then select the Ethernet interface to use to connect to the SDEV.\n \t2 \t Select Properties.\n \t3 \t Select Internet Protocol version 4 (TCP/IPv4) and then select Properties.\n \t4 \t Configure the settings as follows.\n Info\n The communication speed with the SDEV can be improved when the PC's network adapter supports Jumbo Frame.\n Open the device manager, and set the Jumbo Frame to 4 KB or 4088 bytes in Network Adapter > Properties > Advanced Settings.\n Note: It may be noted as JumboPacket depending on the settings.\nConnecting the Wii Classic Controller Pro\nConnect the Classic Controller PRO to the debug controller terminal (circled in red in the following figure) on top of the SDEV.\nThe Classic Controller PRO can be used as a debugging controller.\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_124920044.html","7 Preparing the JOY-CONs",
"\t\t\n7 Preparing the JOY-CONs\nUpdating the JOY-CON Firmware\nFor information about this process, see the Guide to Setting Up the Environment (NX Add-On Controller Kit) in the NintendoSDK Documents for NX.\nPairing the JOY-CON\nPairing is performed by holding down the SYNC Button on the JOY-CON for one second, and then attaching the JOY-CON to the rail.\nAfter waiting a while, release the rail and check the player LED.\nWhen the pairing is completed, the player LED lights up in the pattern corresponding to the number of paired JOY-CON controllers.\n(The player LED blinks during pairing.)\n Figure 7-1 SYNC Button\n Info\n You must perform pairing for each of the JOY-CON units. Note that it is not possible to pair multiple JOY-CON units at the same time.\n When pairing the JOY-CON for the first time, you must perform the pairing operation twice, first with one controller and then with the other.\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_96563581.html","5 Preparing NintendoSDK",
"\t\t\n5 Preparing NintendoSDK\nYou can prepare the NintendoSDK using two different methods. Using online installation, you get and install the package directly from the network. Using offline installation, you get data in advance and use it to install.\nHowever, the online installation option is not ready yet, so this page only describes the procedure for offline installation.\nIn an offline installation, you import an environment created in advance from a combination of specific packages.\nBefore performing this method, you must get the file with the exported environment, called megazarf, from the support group.\nInstalling the NintendoSDK Package\n Info\n To use the NDI, you must have Windows local administrator privileges.\n \tProcedure \tOperation\n \t1 \t Start the NDI and from Building/Managing a Development Environment, select Create From Archive.\n \t2 \t In Installation Source, specify the megazarf file obtained from the support group.\n Set the Installation Target and Environment Name as appropriate, and then click Install to start the installation.\n Info\n The environment refers to the directory where you install the NintendoSDK.\n To install multiple versions or installation package types of the NintendoSDK, you can create multiple environments.\n Info\n False Positives from Antivirus Software\n When installing various NintendoSDK packages, NintendoSDK-related files can be detected incorrectly as viruses by antivirus software.\nWhen such false positives occur, exclude the NintendoSDK install destination folder from the virus scan, and try installing again.\n \t3 \t No operations are required on the installation screen.\n \t4 \t Select whether to install the USB driver while installing the NintendoSDK.\n (The USB driver will be used in features that will be added in future releases. Make sure you have it installed then.)\n \t5 \t Click Finish in the screen shown when NintendoSDK installation is completed.\n When the installation completes, the NINTENDO_SDK_ROOT environment variable that use the installed NintendoSDK folder as its value will be configured.\n Click OK, and then from the list of options in the installed environment, start the NintendoSDK Portal.\nThe NintendoSDK Portal is used by Initializing SDEV, so leave it running.\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_96563591.html","6 Initializing the SDEV",
"\t\t\n6 Initializing the SDEV\nInitializing the SDEV\nInitialize the SDEV firmware using a special tool. (This process usually takes about two minutes.)\n Info\n Warnings about the Windows Firewall are displayed several times during this process. Select Allow access.\n \tProcedure \tOperation\n \t1 \t Verify the value written on the sticker applied to the bottom of the SDEV.\n (This value represents the SDEV's serial number. It is XAW02121013686 in the following example.)\n Info\n The verified value is used to select the SDEV in step 3.\n Info\n Note: For SDEV 1.6, verify the MAC address instead of the serial number.\n Verify the value written on the third sticker on the upper right of the back of the SDEV.\n (This value represents the SDEV MAC address. It is 40D28AB472B3 in the following example.)\n \t2 \t Click the Initialize the SDEV button in the NintendoSDK Portal.\n Info\n To start the NintendoSDK Portal, run the Portal.bat file in the NintendoSDK folder.\n \t3 \t Select the SDEV you want to initialize and begin initialization.\n From the SDEV connection list under 1. Select SDEV actual equipment, use the mouse to select the address verified in step 1 for the Serial number information.\n In 2. Select firmware version, in the combo box, specify the firmware version you want to use. If there are no particular instructions for which version to use, use select default version.\n Next, to start SDEV initialization, in 3. Start SDEV initialization, click Start initialization.\n \t4 \t If Success is displayed at the lower left of the log window, click the Exit button to close the tool.\n Info\n Fan Operating Noise\n When the login window in step 4 is displayed, the cooling fan inside the SDEV starts operating.\nThe fan is somewhat noisy, but that does not mean the unit is malfunctioning.\n Info\n A sample has been built to check whether the SDEV was initialized correctly.\n The following sample shows an execution method.\n \tTo install, in the NintendoSDK Portal, click the Run VSI for NX installer button.\n \tAfter completing step 1, click the Execute Sample button.\n A logo like the following will be displayed if the SDEV was initialized correctly and VSI for NX was installed correctly.\n Note: This sample does not exit automatically. To exit the sample, select the connected target in Target Manager, and then from the shortcut menu that appears, select Reset.\n Troubleshooting\n \tIf the GUI application does not start in step 2, verify that the NintendoSDK\\Tools\\CommandLineTools\\InitializeSdevWin.exe file exists.\nIf this file does not exist, it might have been deleted by a malfunction in the anti-virus software. Check that the anti-virus software has not malfunctioned.\n \tIf the SDEV initialization fails, Fail is displayed instead of Success in step 4.\nIf that happens, try taking the following steps, repeating them a number of times. If the update still fails, contact the Support office.\tExit Target Manager if it is running.\tTarget Manager might be in the task tray, so also check there.\n\tInsert and remove the Wii U console's AC adapter connected to the SDEV.\n\tRetry the procedure starting from step 2.\n \tRe-initialization might fail when using the InitializeSdevWin.bat file included with SDKs prior to NX Add-On 0.5.0 if you have already initialized the SDEV with an SDK from NX Add-On 0.5.0 or later.\nWhen this happens, restore the SDEV and then resume the process from step 2. For information about restoring the SDEV, in the SDEV Operations Manual, see the Troubleshooting section on the SDEV Console Startup Fails page.\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_96563598.html","9 Running NX Applications (For Non-Developers)",
"\t\t\n9 Running NX Applications (For Non-Developers)\nRunning NX Applications\nThis page describes the process for executing NX applications for non-developers who do not have Visual Studio.\nAs an example, we are using the GfxPrimitiveRenderer sample. Get the NCA file for the GfxPrimitiveRenderer sample from a developer. An NCA file is an NX application executable file.\n Info\n For more information about creating NCA files, see the Application Development section in the Tutorial chapter in the NintendoSDK documentation.\n Info\n You can also install NX applications on the SDEV console, and run NX applications on the SDEV alone.\n For more information about the process, in the SDEV Operations Manual, see Installing NX Applications > Running NX Applications on the SDEV.\n \tProcedure \tOperation\n \t1 \t From the Start menu, start Nintendo Target Manager.\n \t2 \t Right-click the target pane, and from the shortcut menu, select Add Target.\n \t3 \t Select the SDEV you want to connect to in this dialog box, then click OK.\n The default name of the development hardware is the MAC address or the serial number of the unit.\n Info\n For information about checking the serial number, see Initializing the SDEV.\n \t4 \t The selected SDEV appears in the target pane. Right-click the target and select Connect to Target.\n The connection is successful when the status changes from Not connected to Connected.\n \t5 \t Confirm that the target is connected. Right-click the target and select Load executable file.\n The Load executable file dialog box appears. Select an NX application executable file (NCA file) and click OK.\n For example, running the GfxPrimitiveRenderer sample will look like the following.\n \t6 \t After executing the sample, the following image will be displayed on the SDEV LCD screen.\n Note: Target Manager\nTarget Manager is software that manages the SDEV unit connected to a PC.\nYou can use it to register development hardware to a PC and run built-in NX applications on SDEV units.\n Info\n In the future, it will be possible to manage multiple SDEV units from one Target Manager.\n Target Manager will be able to manage devices in the emulation environment on Windows just like it can for development hardware.\nTarget Manager starts automatically when running applications from Visual Studio on the SDEV/EDEV.\nIf you are operating the SDEV/EDEV without using Visual Studio, from the Start Menu, start Target Manager.\n Info\n For more information about the features of the Target Manager, see the Target Manager section of Features > Development Hardware Control.\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_96563737.html","4 Preparing Nintendo Dev Interface",
"\t\t\n4 Preparing Nintendo Dev Interface\nAbout Nintendo Dev Interface\nNintendo Dev Interface (NDI) is a tool to set up and manage the development environment.\nIt can be used to manage the development environment manager and to update the SDEV firmware.\n Installing NDI\n Info\n You must have Windows administrator rights to install NDI.\n \tProcedure \tOperation\n \t1 \t Download the NDI installer package from the Nintendo Developer Portal.\n \t2 \t Double-click the installer from the downloaded package to run it.\n \t3 \t Select the language for installation.\n \t4 \t Follow the installer instructions to configure the program.\n You can change the installation path from this screen.\n On this screen, specify shortcut creation and registration to the Start Menu.\n If you select Add application directory to PATH, the path to the NDI program will be added.\n This option is useful when calling NDI functions from a command line.\n To start the installation, click Next to proceed.\n Note: NDI requires .NET Framework 4.6.1 to run.\nIf you do not have .NET Framework 4.6.1 installed, its installer will start.\nFollow the instructions to install .NET Framework 4.6.1.\n \t5 \t To finish the installation, click Finish.\n Note: If you have installed .NET Framework 4.6.1 using the preceding procedure, before you start Nintendo Dev Interface, restart the computer and then run it from the Start menu.\n A shortcut to the program will be added to the Start menu.\n Uninstalling NDI\nNDI can be uninstalled just like any other Windows application, using the Uninstall, Change, and Repair options in the Programs and Features Control Panel.\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_96563916.html","2 SDEV Operating Environment",
"\t\t\n2 SDEV Operating Environment\nThe following environment is required for SDEV setup and the execution of NX applications.\n \tOperating System \t \tMicrosoft Windows 7 Professional (64-bit)\n \tMicrosoft Windows 10 Pro (64-bit)\n Info\n An account with administrator rights is required.\n \t .NET Framework\n \t \tMicrosoft .NET Framework 4.6.1 or later\n Info\n If not already installed, download and install from the following link.\n https://www.microsoft.com/en-us/download/details.aspx?id=49981\n \tSDEV \t \tSDEV 1.6\n \tSDEV 1.8\n \tSDEV PreMP1 (1.9)\n \tSDEV PreMP2\n In addition, the following environment is required for developing applications with the NintendoSDK.\n \tOperating System \t \tMicrosoft Windows 7 Professional (64-bit)\n \tMicrosoft Windows 10 Pro (64-bit)\n Info\n An account with administrator rights is required.\n \t .NET Framework\n \t \t Microsoft .NET Framework 4.6.1 or later\n Info\n If not already installed, download and install from the following link.\n https://www.microsoft.com/en-us/download/details.aspx?id=49981\n \tVisual Studio \t \tMicrosoft Visual Studio 2013 Professional Edition Update 5\n \tMicrosoft Visual Studio 2015 Professional Edition Update 3\n Info\n Required in order to build and debug NX applications.\nNot necessary if not building and debugging the application.\n Info\n To use the NintendoSDK, you must install the Visual C++ redistributable packages.\n They will be automatically installed when you install the NintendoSDK from NDI.\n If you are not using NDI, use one of the following installers to install the packages.\n \tPackage Type \tInstaller Path\n \tVisual C++ Redistributable Packages for Visual Studio 2012 \tNintendoSDK\\Installers\\VcRuntime\\v110\\\tvcredist_x64.exe\n\tvcredist_x86.exe\n \tVisual C++ Redistributable Packages for Visual Studio 2013 \t NintendoSDK\\Installers\\VcRuntime\\v120\\\tvcredist_x64.exe\n\tvcredist_x86.exe\n \tVisual C++ Redistributable Packages for Visual Studio 2015 \t NintendoSDK\\Installers\\VcRuntime\\v140\\\tvc_redist.x64.exe\n\tvc_redist.x86.exe\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_96565538.html","8 Building and Running NX Applications (For Developers)",
"\t\t\n8 Building and Running NX Applications (For Developers)\nOverview\nThe steps to build and run libraries and applications for NintendoSDK are the same as for normal Visual C++ projects.\nThe NintendoSDK provides a sample application that demonstrates the build and run methods.\nPosition of Sample Programs\nSample programs are in the NintendoSDK Samples package.\nWhen the NintendoSDK Samples package is installed, the sample programs are placed in NintendoSDK\\Samples\\Sources\\Applications.\nBuilding NX Applications\nThe following description of the build procedure for a sample program uses the GfxPrimitiveRenderer sample as an example.\n \tProcedure \tOperation\n \t1 \t Open NintendoSDK\\Samples\\Sources\\Applications\\GfxPrimitiveRenderer\\GfxPrimitiveRenderer-spec.NX.vs2015.sln.\n Info\n The preceding procedure assumes the use of Visual Studio 2015.\n If you are using Visual Studio 2013, open the file GfxPrimitiveRenderer-spec.NX.vs2013.sln, located in the same directory.\n \t2 \t From the Visual Studio Solution Platform, select NX64.\n \t3 \t Select Build > Build Solution.\n Running NX Applications\nThe following description of the execution procedure for a sample program uses the GfxPrimitiveRenderer sample as an example.\n \tProcedure \tOperation\n \t1 \tBuild a sample program following the procedure in the previous section.\n \t2 \t Verify that NX64 is selected in the Visual Studio Solution Platform.\n \t3 \tFrom the Start menu, start Target Manager.\n \t4 \t Add the development hardware to Target Manager.\n To add your development hardware, in the shortcut menu, select Add Target.\n \t5 \t Right-click, and in the shortcut menu, select Connect to Target.\n Confirm that the status indicates an active connection.\n \t6 \t In Visual Studio, select Debug > Start Debugging or Debug > Start without Debugging.\n \t7 \t After executing the sample, the following image will be displayed on the SDEV LCD screen.\n Note: Target Manager\nTarget Manager is software that manages the SDEV unit connected to a PC.\nYou can use it to register development hardware to a PC and run built-in NX applications on SDEV units.\n Info\n In the future, it will be possible to manage multiple SDEV units from one Target Manager.\n Target Manager will be able to manage devices in the emulation environment on Windows just like it can for development hardware.\nTarget Manager starts automatically when running applications from Visual Studio on the SDEV/EDEV.\nIf you are operating the SDEV/EDEV without using Visual Studio, from the Start Menu, start Target Manager.\n Info\n For more information about the features of the Target Manager, see the Target Manager section of Features > Development Hardware Control.\nNext Steps\nFor the next steps, see the Tutorial chapter in the NintendoSDK documentation.\nYou can learn about creating NX applications by reading and following the tutorial.\nCONFIDENTIAL\n",0,"en-US"]
,["Pages/Page_97625157.html","1 Introduction",
"\t\t\n1 Introduction\nThis document describes the procedure to get started running NX applications on the SDEV, for people who are using an SDEV for the first time.\nUse the following procedure to run NX applications on SDEV hardware.\nCheck the SDEV Operating Environment page prior to setup.\n \tChapter \tDevelopers \tNon-Developers\n \t3 \t Preparing the SDEV\n \t4 \tPreparing Nintendo Dev Interface\n \t5 \tPreparing NintendoSDK\n \t6 \tInitializing the SDEV\n \t7 \tPreparing the JOY-CONs\n \t8 \tBuilding and Running NX Applications \t9 \tRunning Built NX Applications\nCONFIDENTIAL\n",0,"en-US"]
];
for (var x = 0; x < additionalData.length; x++) Search.indexData.push(additionalData[x]);
Search.additionalData = additionalData;
})();
